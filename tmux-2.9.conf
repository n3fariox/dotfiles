# cat << EOF > /dev/null
# NOTE: EOF magic above allows for bash functions to be included at the end
################################### General  ###################################
unbind C-b
unbind C-q
set -g prefix C-q

set -g base-index 1
set -g default-terminal "screen-256color"
set -s escape-time 1
set -g display-time 3000
set -g history-limit 10000
set -g allow-rename off
set -s focus-events on
setw -g automatic-rename off
set -g renumber-windows on
set -qg status-utf8 on
set -qg utf8 on
set -g mouse on
set -g xterm-keys on

# Disable that annoying right-click window
# MouseDown3 == Right click
unbind -T root MouseDown3Pane

############################### Window Management ##############################
unbind c
bind c new-window -c '#{pane_current_path}'
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

############################## Config Management ###############################
unbind r
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'
bind e new-window -n '~/.tmux.conf' "sh -c '\${EDITOR:-nano} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

#################################### Splits ####################################
unbind '"'
unbind %
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

set -g set-titles on
set -g set-titles-string '#h ❐ #S ● #I #W'

################################## Navigation ##################################
unbind C-Left
unbind C-Right
bind -r n next-window
bind -r p previous-window
bind -n S-Left select-pane -L
bind -n S-Right select-pane -R
bind -n S-Up select-pane -U
bind -n S-Down select-pane -D
bind -n M-Left previous-window
bind -n M-Right next-window

################################ Pane Resizing #################################
unbind M-Left
unbind M-Right
bind -r M-Left resize-pane -L 2
bind -r M-Right resize-pane -R 2
bind -r M-Up resize-pane -U 2
bind -r M-Down resize-pane -D 2

################################# Swap Windows #################################
bind -n C-S-Left swap-window -t -1
bind -n C-S-Right swap-window -t +1

################################### Activity ###################################
set -g monitor-activity on
set -g visual-activity off

#################################### Colors ####################################
ST_FG1=colour46
ST_FG2=colour0
ST_BG1=colour0
ST_BG2=colour46

set -g mode-style "bg=colour6"
set -g mode-style "fg=colour0"
################################## Status Bar ##################################
set -g status-interval 5
set -g status-justify left
set -g status-bg $ST_BG1
set -g status-fg $ST_FG1

KEY="#{s/root//:client_key_table}"
SEP="#[fg=green,nobold] | "
IP_ADDRS="#(cut -c3- ~/.tmux.conf | sh -s _get_ip)"
set -g status-left "#[fg=$ST_BG1,bg=$ST_FG1]#(whoami)::"
set -g status-right "$KEY$SEP#[fg=white,bold]$IP_ADDRS$SEP#[fg=white,bold]%H:%M %m/%d/%Y"
set -g status-right-length 60

################################ Window Status #################################
set -g window-status-separator '|'
set -gw window-status-current-format "#[fg=$ST_BG1,bg=$ST_FG1]#F#I:#W "
set -gw window-status-format "#[fg=$ST_FG1,bg=$ST_BG1] #I:#W "
set -g window-status-activity-style 'underscore'
################################## Messaging ###################################
set -g message-style "fg=black,bg=yellow"
set -g message-command-style "fg=blue,bg=black"

################################# Nested tmux ##################################
# This requires relatively new tmux
bind-key -T remote C-Down if -F '$key-table == "remote"' \
    'display "switching to local"; set -u key-table; set -g prefix C-q'
bind-key -T root C-Up if -F '$key-table == "" || $key-table == "root"' \
    'display "switching to remote"; set key-table remote; set -g prefix C-b'

# EOF
#
# _get_ip() {
#     # Get gloabl addresses, filter out bridge and docker ones, then join onto
#     # a single line
#     ip_addresses=`ip -4 -br a | grep "UP" | \
#                   grep -v 'docker.*\|virbr.*\|br-.*' | tr -s ' ' | \
#                   cut -d ' ' -f 3- | tr -s ' ' '\n' | cut -d'/' -f1 | \
#                   tr -s '\n' ' '`
#     # Black magic bash to remove extra space then echo out
#     echo -n "${ip_addresses%?}"
# }
# "$@"
